// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// NextAuth models
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  works         Work[]    // Add relation to Work model
}

model Account {
  id                 String     @id @default(cuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Updated Work model with additional fields
model Work {
  id            String   @id @default(cuid())
  userId        String   // Explicitly define the field
  content       Json
  evaluationData Json?    // Added for OER evaluation data
  bulletWeights Json?    // Added for bullet weights
  summaries     Json?    // Added for category summaries
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}